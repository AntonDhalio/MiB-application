/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mib.application;

import oru.inf.InfDB;
import oru.inf.InfException;
import javax.swing.JOptionPane;
import java.util.ArrayList;
/**
 *
 * @author anton
 */
public class AndraUtomjording extends javax.swing.JFrame {

    private static InfDB idb;
    private static String id;
    private HanteraUtomjording hanteraUtomjording;
    private HanteraUtomjordingAdmin hanteraUtAdmin;
    private ArrayList<String> utomjording;
    private ArrayList<String> agenter;
    private ArrayList<String> omrade;
    private ArrayList<String> ras;
    private ArrayList<String> boglodite;
    private ArrayList<String> squid;
    private ArrayList<String> worm;
    private String gamalRas;
    /**
     * Creates new form AndraUtomjording
     */
    public AndraUtomjording(InfDB idb, String id) {
        initComponents();
        this.idb=idb;
        this.id=id;
        
        
        try{
            //Kod som hämtar ut hela ID-kolumnen för aliens i databasen
            ArrayList<String> utomjording = idb.fetchColumn("SELECT Alien_ID FROM alien ORDER BY Alien_ID ASC");
            
            //For each loop som gör att alla områdesnamn listas i en drop-down-meny
            for(String nuvarandeUtomjording: utomjording){
                utomjordingBox.addItem(nuvarandeUtomjording);
            }
            

        }
        
        catch(InfException e){
            JOptionPane.showMessageDialog(null, "Något gick fel");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        utomjordingBox = new javax.swing.JComboBox<>();
        lblMIB = new javax.swing.JLabel();
        goBack = new javax.swing.JLabel();
        namnFalt = new javax.swing.JTextField();
        losenordFalt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        telnrFalt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        agentBox = new javax.swing.JComboBox<>();
        rasBox = new javax.swing.JComboBox<>();
        omradeBox = new javax.swing.JComboBox<>();
        godkännKnapp = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        utomjordingBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utomjordingBoxActionPerformed(evt);
            }
        });
        getContentPane().add(utomjordingBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 57, 160, -1));

        lblMIB.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        lblMIB.setForeground(new java.awt.Color(255, 255, 255));
        lblMIB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMIB.setText("Ändra information om:");
        lblMIB.setToolTipText("");
        getContentPane().add(lblMIB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 570, -1));

        goBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/design/GoBack.png"))); // NOI18N
        goBack.setToolTipText("");
        goBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                goBackMouseReleased(evt);
            }
        });
        getContentPane().add(goBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));
        getContentPane().add(namnFalt, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 120, 160, -1));
        getContentPane().add(losenordFalt, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 160, 160, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Lösenord");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 120, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Namn");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 120, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Telefon");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 120, -1));
        getContentPane().add(telnrFalt, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 200, 160, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Område");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 240, 120, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Ansvarig Agent");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, 120, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Ras");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 320, 120, -1));

        getContentPane().add(agentBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, 160, -1));

        getContentPane().add(rasBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 320, 160, -1));

        getContentPane().add(omradeBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 240, 160, -1));

        godkännKnapp.setBackground(new java.awt.Color(0, 0, 0));
        godkännKnapp.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 153, 255), 2, true));
        godkännKnapp.setForeground(new java.awt.Color(102, 153, 255));
        godkännKnapp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        godkännKnapp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                godkännKnappMouseReleased(evt);
            }
        });
        godkännKnapp.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/design/accept.png"))); // NOI18N
        godkännKnapp.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 20, 20));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 153, 255));
        jLabel11.setText("Godkänn");
        godkännKnapp.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 70, 30));

        getContentPane().add(godkännKnapp, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 360, 110, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/design/spaceBlue.jpg"))); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void utomjordingBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utomjordingBoxActionPerformed
        String valdUtomjording = (String)utomjordingBox.getSelectedItem();
        
        agentBox.removeAllItems();
        rasBox.removeAllItems();
        omradeBox.removeAllItems();
        
        try{
            // Denna kod hämtar data från databasen från det agent-ID man har valt
            String namn = idb.fetchSingle("SELECT Namn FROM alien WHERE Alien_ID=" + valdUtomjording);
            namnFalt.setText(namn);
            String losenord = idb.fetchSingle("SELECT Losenord FROM alien WHERE Alien_ID=" + valdUtomjording);
            losenordFalt.setText(losenord);
            String telNr = idb.fetchSingle("SELECT Telefon FROM alien WHERE Alien_ID=" + valdUtomjording);
            telnrFalt.setText(telNr);
            String valtOmrade = idb.fetchSingle("SELECT Plats FROM alien WHERE Alien_ID=" + valdUtomjording);
            String valdAgent = idb.fetchSingle("SELECT Ansvarig_Agent FROM alien WHERE Alien_ID=" + valdUtomjording);
            
            /* 
            Denna kod hämtar kolumnen "områdes-ID" från områdestabellen i databasen och med en for each loop
            läggs alla områdesID:n till i en drop-down-meny i stigande ordning
            */
            ArrayList<String> omrade = idb.fetchColumn("SELECT Omrades_ID FROM omrade ORDER BY Omrades_ID ASC");
            for(String nuvarandeOmrade: omrade){
                omradeBox.addItem(nuvarandeOmrade);
            }
            
            /* 
            Denna kod hämtar kolumnen "agent-ID" från agent-tabellen i databasen och med en for each loop
            läggs alla områdesID:n till i en drop-down-meny i stigande ordning
            */
            ArrayList<String> agent = idb.fetchColumn("SELECT Agent_ID FROM agent ORDER BY Agent_ID ASC");
            for(String nuvarandeAgent: agent){
                agentBox.addItem(nuvarandeAgent);
            }
            
            /* 
            Denna kod skapar en arraylist med olika raser som användaren sedan kan välja mellan.
            Genom en for each loop listas sedan alla raser i en drop-down-meny
            */
            ArrayList<String> ras = new ArrayList<String>();
            ras.add("Ras inte registrerad");
            ras.add("boglodite");
            ras.add("squid");
            ras.add("worm");
            for(String nuvarandeRas: ras){
               rasBox.addItem(nuvarandeRas);
            }
            
            omradeBox.setSelectedItem(valtOmrade);
            agentBox.setSelectedItem(valdAgent);
            
             
            ArrayList<String> boglodite = idb.fetchColumn("SELECT Alien_ID FROM boglodite");
            
            ArrayList<String> squid = idb.fetchColumn("SELECT Alien_ID FROM squid");
            
            ArrayList<String> worm = idb.fetchColumn("SELECT Alien_ID FROM worm");
            
            for(String i: boglodite){
            if(i.equals(valdUtomjording)){
                rasBox.setSelectedItem(ras.get(1));
            }
            }
            for(String j: squid){
            if(j.equals(valdUtomjording)){
                rasBox.setSelectedItem(ras.get(2));
            }
            }
            for(String k: worm){
            if(k.equals(valdUtomjording)){
                rasBox.setSelectedItem(ras.get(3));
            }
            }
            this.gamalRas = (String)rasBox.getSelectedItem();
            
        }
        catch(InfException e){
            JOptionPane.showMessageDialog(null, "Något gick fel");
        }
    }//GEN-LAST:event_utomjordingBoxActionPerformed

    private void godkännKnappMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_godkännKnappMouseReleased
        String valdUtomjording = (String)utomjordingBox.getSelectedItem();
        
        //Externt metodanrop till valideringsklassen för att se till att fälten med telefonnummer, lösenord och namn korrekt ifyllda
        if(Validering.txtFieldBegransad30(telnrFalt) && Validering.txtFieldBegransad6(losenordFalt) && Validering.txtFieldBegransad20(namnFalt)){
        try{
            String namn = namnFalt.getText();
            String losenord = losenordFalt.getText();
            String telNr = telnrFalt.getText();
            String regRas = (String)rasBox.getSelectedItem();
            String regAgent = (String)agentBox.getSelectedItem();
            String regOmrade = (String)omradeBox.getSelectedItem();
            
            //Kod för att se till att användaren måste bekräfta eller avvisa ändringarna
            int reply = JOptionPane.showConfirmDialog(null, "Är du säker på att du vill ändra dessa uppgifter?", "Varning!", JOptionPane.YES_NO_OPTION);
            
            //Kod som uppdaterar alla fält som fått ny information, om användaren bekräftar att ändringarna ska genomföras
            if(reply == JOptionPane.YES_OPTION){
                idb.update("UPDATE alien SET Namn='" + namn + "' where Alien_ID=" + valdUtomjording);
                idb.update("UPDATE alien SET Losenord='" + losenord + "' where Alien_ID=" + valdUtomjording);
                idb.update("UPDATE alien SET Telefon='" + telNr + "' where Alien_ID=" + valdUtomjording);
                idb.update("UPDATE alien SET Ansvarig_Agent='" + regAgent + "' where Alien_ID=" + valdUtomjording);
                idb.update("UPDATE alien SET Plats='" + regOmrade + "' where Alien_ID=" + valdUtomjording);
               
                // Tar bort vald aliens ID från sin gamla ras i databasen
                if(gamalRas != null && regRas != gamalRas){
                idb.delete("DELETE FROM " + gamalRas + " WHERE Alien_ID=" + valdUtomjording);
                }
                if(regRas.equals(gamalRas)){}
                
                //Lägger till vald aliens ID i sin nya ras i databasen
                else if(regRas.equals("boglodite")){
                    idb.insert("INSERT INTO boglodite VALUES(" + valdUtomjording + ", 3)");
                }
                else if(regRas.equals("squid")){
                    idb.insert("INSERT INTO squid VALUES(" + valdUtomjording + ", 6)");
                }
                else if(regRas.equals("worm")){
                    idb.insert("INSERT INTO worm VALUES(" + valdUtomjording + ")");
                }
                gamalRas = regRas;
                JOptionPane.showMessageDialog(null, "Ändringar genomförda");
            }
        }
        
        catch(InfException e){
        JOptionPane.showMessageDialog(null, "Något gick fel");
        }
        }
    }//GEN-LAST:event_godkännKnappMouseReleased

    private void goBackMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goBackMouseReleased
        /*
        Kollar adminstatus för den inloggade agenten, för att veta vilken huvudmeny användaren 
        ska skickas tillbaka till vid anvädning av "tillbaka"-knappen
        */
        
        try {
            String arAdmin = idb.fetchSingle("SELECT Administrator FROM agent WHERE Agent_ID=" + id);

            if(arAdmin.equals("N")){
                new HanteraUtomjording(idb, id).setVisible(true);
                dispose();
            }
            else if(arAdmin.equals("J")){
                new HanteraUtomjordingAdmin(idb, id).setVisible(true);
                dispose();
            }
        }
        catch (InfException ex) {
            System.out.println("Något gick fel");
        }
    }//GEN-LAST:event_goBackMouseReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> agentBox;
    private javax.swing.JLabel goBack;
    private javax.swing.JPanel godkännKnapp;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblMIB;
    private javax.swing.JTextField losenordFalt;
    private javax.swing.JTextField namnFalt;
    private javax.swing.JComboBox<String> omradeBox;
    private javax.swing.JComboBox<String> rasBox;
    private javax.swing.JTextField telnrFalt;
    private javax.swing.JComboBox<String> utomjordingBox;
    // End of variables declaration//GEN-END:variables
}
