/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mib.application;

import java.awt.print.PrinterAbortException;
import java.awt.print.PrinterException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author anton
 */
public class SystemInfo extends javax.swing.JFrame {

    private static InfDB idb;
    private static String id;
    private HuvudmenyAdmin menyAdmin;
    /**
     * Creates new form SystemInfo
     */
    public SystemInfo(InfDB idb, String id) {
        initComponents();
        this.idb = idb;
        this.id = id;
        laggTillInfoIBoxOmrade();
        laggTillInfoIBoxUtrustning();
        laggTillInfoIBoxAlien();
        laggTillInfoIBoxAgent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        statArea = new javax.swing.JTextArea();
        lblMIB = new javax.swing.JLabel();
        goBack = new javax.swing.JLabel();
        skrivUt = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        statArea.setBackground(new java.awt.Color(0, 0, 0));
        statArea.setColumns(20);
        statArea.setForeground(new java.awt.Color(255, 255, 255));
        statArea.setRows(5);
        jScrollPane1.setViewportView(statArea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 426, 250));

        lblMIB.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        lblMIB.setForeground(new java.awt.Color(255, 255, 255));
        lblMIB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMIB.setText("Övergripande statistik om systemet");
        lblMIB.setToolTipText("");
        getContentPane().add(lblMIB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 750, -1));

        goBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/design/GoBack.png"))); // NOI18N
        goBack.setToolTipText("");
        goBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goBackMouseClicked(evt);
            }
        });
        getContentPane().add(goBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        skrivUt.setBackground(new java.awt.Color(0, 0, 0));
        skrivUt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 153, 255), 2, true));
        skrivUt.setForeground(new java.awt.Color(102, 153, 255));
        skrivUt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        skrivUt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                skrivUtMouseClicked(evt);
            }
        });
        skrivUt.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/design/accept.png"))); // NOI18N
        skrivUt.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 20, 20));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 153, 255));
        jLabel1.setText("Skriv ut");
        skrivUt.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 70, 30));

        getContentPane().add(skrivUt, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 360, 110, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/design/spaceBlue.jpg"))); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void laggTillInfoIBoxAgent(){
        try{
            String antalAgenter = idb.fetchSingle("SELECT COUNT(*) FROM agent");
            String antalAdmins = idb.fetchSingle("SELECT COUNT(*) FROM agent Where Administrator='J'");
            String antalFaltAgent = idb.fetchSingle("SELECT COUNT(*) FROM faltagent");
            
            statArea.insert("\n", 0);
            statArea.insert("   Antal fältagenter: " + antalFaltAgent + "\n", 0);
            statArea.insert("   Antal administratörer: " + antalAdmins + "\n", 0);
            statArea.insert("   Totalt antal registrerade agenter: " + antalAgenter + "\n", 0);
            statArea.insert("AGENTER:\n", 0);           
        }
        catch(InfException e){
            JOptionPane.showMessageDialog(null, "Något gick fel");
        }
    }
    
    private void laggTillInfoIBoxAlien(){
        try{    
            String antalAliens = idb.fetchSingle("SELECT COUNT(*) FROM alien");
            String antalBogs = idb.fetchSingle("SELECT COUNT(*) FROM boglodite");
            String antalSquids = idb.fetchSingle("SELECT COUNT(*) FROM squid");
            String antalWorms = idb.fetchSingle("SELECT COUNT(*) FROM worm");
            
            statArea.insert("\n", 0);
            statArea.insert("   Antal Worms: " + antalWorms + "\n", 0);
            statArea.insert("   Antal Squids: " + antalSquids + "\n", 0);
            statArea.insert("   Antal Boglodites: " + antalBogs + "\n", 0);
            statArea.insert("   Totalt antal registrerade utomjordingar: " + antalAliens + "\n", 0);
            statArea.insert("UTOMJORDINGAR:\n", 0);
        }
        catch(InfException e){
            JOptionPane.showMessageDialog(null, "Något gick fel");
        }
    }
    
    private void laggTillInfoIBoxUtrustning(){
        try{
            String mangdUtrustning = idb.fetchSingle("SELECT COUNT(*) FROM utrustning");
            String antalFordon = idb.fetchSingle("SELECT COUNT(*) FROM fordon");
            String mangdTeknik = idb.fetchSingle("SELECT COUNT(*) FROM teknik");
            String mangdVapen = idb.fetchSingle("SELECT COUNT(*) FROM vapen");
            String mangdKomm = idb.fetchSingle("SELECT COUNT(*) FROM kommunikation");
            String utkvittUtr = idb.fetchSingle("SELECT COUNT(*) FROM innehar_utrustning");
            String utkvittFordon = idb.fetchSingle("SELECT COUNT(*) FROM innehar_fordon");
            
            statArea.insert("\n", 0);
            statArea.insert("   Utkvitterade fordon: " + utkvittFordon + "\n", 0);
            statArea.insert("   Utkvitterad utrustning: " + utkvittUtr + "\n", 0);
            statArea.insert("   Antal kommuikationsutrustning: " + mangdKomm + "\n", 0);
            statArea.insert("   Antal teknik: " + mangdTeknik + "\n", 0);
            statArea.insert("   Antal vapen " + mangdVapen + "\n", 0);
            statArea.insert("   Totalt antal registrerade fordon: " + antalFordon + "\n", 0);
            statArea.insert("   Total mängd registrerad utrustning: " + mangdUtrustning + "\n", 0);
            statArea.insert("UTRUSTNING OCH FORDON:\n", 0);
        }
        
        catch(InfException e){
            JOptionPane.showMessageDialog(null, "Något gick fel");
        }
    }
    
    private void laggTillInfoIBoxOmrade(){
        try{
            String antalOmraden = idb.fetchSingle("SELECT COUNT(*) FROM omrade");
            String antalPlatser = idb.fetchSingle("SELECT COUNT(*) FROM plats");
            
            statArea.insert("\n", 0);
            statArea.insert("   Totalt antal platser inom alla områden: " + antalPlatser + "\n", 0);
            statArea.insert("   Totalt antal registrerade områden: " + antalOmraden + "\n", 0);
            statArea.insert("OMRÅDEN OCH PLATSER:\n", 0); 
        }
        catch(InfException e){
            JOptionPane.showMessageDialog(null, "Något gick fel");
        }
    }
    
    private void goBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goBackMouseClicked
        try {
            String arAdmin = idb.fetchSingle("SELECT Administrator FROM agent WHERE Agent_ID=" + id);

            if(arAdmin.equals("N")){
                new AgentMeny(idb, id).setVisible(true);               
                dispose();
            }
            else if(arAdmin.equals("J")){
                new HuvudmenyAdmin(idb, id).setVisible(true);
                dispose();
            }
        }
        catch (InfException ex) {
            System.out.println("Något gick fel");
        }
    }//GEN-LAST:event_goBackMouseClicked

    private void skrivUtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_skrivUtMouseClicked
        try {
            statArea.print();
        } catch (PrinterException ex) {
            System.out.println("Utskriften avbröts");
        }
    }//GEN-LAST:event_skrivUtMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SystemInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SystemInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SystemInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SystemInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SystemInfo(idb, id).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel goBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMIB;
    private javax.swing.JPanel skrivUt;
    private javax.swing.JTextArea statArea;
    // End of variables declaration//GEN-END:variables
}
